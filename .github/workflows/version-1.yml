# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    services:
      # How to use Redis
      redis:
        image: redis
        ports:
        - 6379/tcp
      # How to use Elasticsearch
      elasticsearch:
        image: elasticsearch:7.9.3
        ports:
        - 9200/tcp
        options: -e="discovery.type=single-node" --health-cmd="curl http://localhost:9200/_cluster/health" --health-interval=10s --health-timeout=5s --health-retries=10

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: Check Directory Path
        run: pwd
      - name: Check directory content
        run: ls -lart
      - name: Check php version
        run: php -v
      - name: Check mysql version
        run: mysql -v
        continue-on-error: true
      - name: Check mysql version
        run: mysql --version
        continue-on-error: true
      - name: Check composer version
        run: composer -V
      - name: Check elastic search version
        run: curl -XGET 'http://localhost:9200'
        continue-on-error: true
      - name: Check elastic search status
        run: service elasticsearch status
        continue-on-error: true

